###################
# Global Settings #
###################

stages:
  - Env
  - Canary
  - Build
  - Test
  - Tutorials
  - Apps

variables:
  GET_SOURCES_ATTEMPTS: 10
  ARTIFACT_DOWNLOAD_ATTEMPTS: 10
  RESTORE_CACHE_ATTEMPTS: 10
  GIT_STRATEGY: fetch
  GLOBAL_CI_VARIABLE: "global_ci_value"
  CI_JOB_NAME_TMP: ${CI_JOB_NAME}
  CI_JOB_NAME_NOSTAGE: ${CI_JOB_NAME_TMP#*:}
  #CI_DEBUG_TRACE: "true"
  http_proxy: "http://proxyout.lanl.gov:8080"
  https_proxy: "http://proxyout.lanl.gov:8080"
  ftp_proxy: "http://proxyout.lanl.gov:8080"
  no_proxy: "lanl.gov"
  SPACK_ROOT: /home/gitlab-runner/ci-spack/spack
  DEPS_LOCK: /home/gitlab-runner/ci-spack/deps.pid
  lock_fd: 314
before_script:
  - echo ${CI_JOB_NAME_NOSTAGE%.*}-${CI_COMMIT_REF_SLUG}
  - '[ "$(git rev-parse origin/$CI_COMMIT_REF_NAME)" != "$CI_COMMIT_SHA" ] && curl --header "PRIVATE-TOKEN: $MY_CI_API_TOKEN" -X POST https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/cancel'
  #- find . -name "`basename cinch`" | grep "cinch\$" | xargs rm -fr
  - |
    if [[ ${CI_RUNNER_TAGS} = "shell" ]];
    then
      module load intel/19.0.2;
      module load python/3.5.1;
      module load cmake/3.12.4;
      module load clang/7.0.0;
      module unload gcc;
      module load gcc/7.3.0;
      source ${SPACK_ROOT}/share/spack/setup-env.sh || /bin/true;
      spack load -r flecsi~graphviz%intel@19.0.2 backend=$RUNTIME || /bin/true;
      spack unload flecsi~graphviz%intel@19.0.2 backend=$RUNTIME || /bin/true;
      module list;
    fi

###################
###################
###################

#############
# Env Stage #
#############

.env:
  retry: 2
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    CCACHE_DIR: "${CI_PROJECT_DIR}/ccache"
    CCACHE_UMASK: 000
    DISTRO: ""
    RUNTIME: ""
    CC: "gcc"
    CXX: "g++"
    CXXFLAGS: "-Werror -Wno-deprecated-declarations"
    BUILD_TYPE: "Debug"
    IGNORE_NOCI: "FALSE"
  stage: Env
  tags:
    - shell
  cache:
    #key: ${CI_JOB_NAME_NOSTAGE%.*}-${CI_COMMIT_REF_SLUG}
    #key: ${CI_COMMIT_REF_SLUG}
    # key: ${DISTRO}-${RUNTIME}-${CC}
    # paths:
    #   - ccache/
  artifacts:
    # name: "${CI_COMMIT_REF_SLUG}-${CI_JOB_NAME}"
    # paths:
    #   - ${CI_PROJECT_DIR}/build #/builds/next-generation-codes/laristra/flecsi/build
    # when: always
  dependencies: []
  script:
    - mkdir -p build
    - cd ${CI_PROJECT_DIR}/build/
    - cp ${CI_PROJECT_DIR}/spack/repo_env.yaml ./spack.yaml
    - exec {lock_fd}>${DEPS_LOCK}
    - |
      if [[ ${I_WANT_TO_CLEAN_UP} ]];
      then
        rm -rf ${SPACK_ROOT}/*;
      fi
    - flock -n "${lock_fd}"
    - |
      if [[ ! -d ${SPACK_ROOT} ]];
      then
        git init --shared=group ${SPACK_ROOT};
        git -c ${SPACK_ROOT} pull https://github.com/spack/spack develop;
      fi
    - source ${SPACK_ROOT}/share/spack/setup-env.sh
    - spack repo add ${SPACK_ROOT}/var/spack/repos/builtin/ || /bin/true
    - spack install flecsi~graphviz%intel@19.0.2 backend=mpi
    - flock -u "${lock_fd}"

################
# Canary Stage #
################

.canary:
  retry: 2
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    CCACHE_DIR: "${CI_PROJECT_DIR}/ccache"
    CCACHE_UMASK: 000
    DISTRO: "ubuntu"
    RUNTIME: "mpi"
    CC: "gcc"
    CXX: "g++"
    CXXFLAGS: "-Werror -Wno-deprecated-declarations"
    BUILD_TYPE: "Debug"
    IGNORE_NOCI: "FALSE"
  image:
    name: laristra/flecsi-third-party:${DISTRO} #user: flecsi
  stage: Canary
  tags:
    - docker
  cache:
    #key: ${CI_JOB_NAME_NOSTAGE%.*}-${CI_COMMIT_REF_SLUG}
    #key: ${CI_COMMIT_REF_SLUG}
    key: ${DISTRO}-${RUNTIME}-${CC}
    paths:
      - ccache/
  artifacts:
    name: "${CI_COMMIT_REF_SLUG}-${CI_JOB_NAME}"
    paths:
      - ${CI_PROJECT_DIR}/build #/builds/next-generation-codes/laristra/flecsi/build
    when: always
  dependencies: []
  script:
    - |
      if [[ ${CI_JOB_STAGE} = "Canary" || ${CI_JOB_STAGE} = "Build" ]];
      then
        ccache -z;
        nproc;
        # git submodule init;
        # git config submodule.cinch.url https://github.com/laristra/cinch.git;
        # git submodule update --init --recursive;
        mkdir -p build;
        cd ${CI_PROJECT_DIR}/build/;
        echo 'cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
                -DFLECSI_RUNTIME_MODEL=$RUNTIME \
                ${MINIMAL:+-DCMAKE_DISABLE_FIND_PACKAGE_METIS=ON} \
                -DFLECSI_ENABLE_TUTORIAL=$([ "$RUNTIME" = "hpx" ] && echo OFF || echo ON) \
                -DENABLE_UNIT_TESTS=ON \
                -DENABLE_PARMETIS=ON \
                -DENABLE_COLORING=ON \
                -DENABLE_DOXYGEN=OFF \
                -DENABLE_FLECSTAN=$([ "$CI_RUNNER_TAGS" = "shell" ] && echo OFF || echo ON) \
                -DENABLE_DOCUMENTATION=OFF \
                -DENABLE_COVERAGE_BUILD=ON \
                ..';
        export tmp_flags='-mca pml ^ucx --oversubscribe'
        cmake -DMPIEXEC_PREFLAGS=$([ "$DISTRO" = "fedora" ] && echo ${tmp_flags}) \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DFLECSI_RUNTIME_MODEL=$RUNTIME \
          ${MINIMAL:+-DCMAKE_DISABLE_FIND_PACKAGE_METIS=ON} \
          -DFLECSI_ENABLE_TUTORIAL=$([ "$RUNTIME" = "hpx" ] && echo OFF || echo ON) \
          -DENABLE_UNIT_TESTS=ON \
          -DENABLE_PARMETIS=ON \
          -DENABLE_COLORING=ON \
          -DENABLE_DOXYGEN=OFF \
          -DENABLE_FLECSTAN=ON \
          -DENABLE_FLECSTAN=$([ "$CI_RUNNER_TAGS" = "shell" ] && echo OFF || echo ON) \
          -DENABLE_DOCUMENTATION=OFF \
          -DENABLE_COVERAGE_BUILD=ON \
          ..;
        echo 'make -k VERBOSE=1 -j2 -l80';
        make -k VERBOSE=1 -j2 -l80;
        mkdir -p install;
        echo 'make install DESTDIR=install';
        make install DESTDIR=install;
        if [[ ${CI_RUNNER_TAGS} = "docker" ]];
        then
          sudo make install;
        fi;
        ccache -s;
      fi
    - |
      if [[ ${CI_JOB_STAGE} = "Canary" || ${CI_JOB_STAGE} = "Test" ]];
      then
        cd ${CI_PROJECT_DIR}/build/;
        echo 'make test ARGS="-V"';
        make test ARGS="-V";
        echo 'gcovr .';
        gcovr .;
      fi
    - |
      if [[ ${CI_JOB_STAGE} = "Canary" ]];
      then
        echo 'Format Checking';
        cd ${CI_PROJECT_DIR}/build/;
        echo 'clang-format -version';
        clang-format -version;
        echo 'make format && git diff --exit-code --ignore-submodules';
        make format && git diff --exit-code --ignore-submodules;
      fi
    - |
      if [[ ${CI_JOB_STAGE} = "Tutorials" ]];
      then
        echo 'Building and Running Tutorials';
        cd ${CI_PROJECT_DIR}/build/;
        sudo make install;
        source /usr/local/bin/flecsi-tutorial.sh;
        cd ../flecsi-tutorial;
        cd 00-driver;
        flecsit compile driver.cc;
        ./driver;
        cd ../01-tasks;
        flecsit compile tasks.cc;
        ./tasks;
      fi;
    - |
      if [[ ${CI_JOB_STAGE} = "Apps" ]];
      then
        echo 'Building and Testing FleCSALE';
        cd ${CI_PROJECT_DIR}/build/;
        git clone --recursive https://github.com/laristra/flecsale.git;
        cd flecsale/flecsi;
        git fetch;
        git checkout ${CI_COMMIT_REF_NAME};
        git submodule update --init --recursive;
        cd ../;
        mkdir build;
        cd build;
        echo 'cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
                -DFLECSI_RUNTIME_MODEL=mpi \
                -DENABLE_UNIT_TESTS=ON \
                ..';
        cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
          -DFLECSI_RUNTIME_MODEL=mpi \
          -DENABLE_UNIT_TESTS=ON \
          ..;
        echo 'make -j2 || make VERBOSE=1';
        make -j2 || make VERBOSE=1;
        echo 'make test ARGS="CTEST_OUTPUT_ON_FAILURE=1"';
        make test ARGS="CTEST_OUTPUT_ON_FAILURE=1";
      fi;

###############
# Build Stage #
###############

.build:
  extends: .canary
  stage: Build

##############
# Test Stage #
##############

.test:
  extends: .canary
  stage: Test
  artifacts:
  dependencies:
    #- "build:${CI_JOB_NAME#*:}"
    - .build

################
# Format Stage #
################

.format:
  extends: .canary
  stage: Format
  artifacts:
  dependencies:
    #- build:${CI_JOB_NAME#*:}
    - .build

###################
# Tutorials Stage #
###################

.tutorials:
  extends: .canary
  stage: Tutorials
  artifacts:
  dependencies:
    #- build:${CI_JOB_NAME#*:}
    - .build

##############
# Apps Stage #
##############

.apps:
  extends: .canary
  stage: Apps
  artifacts:
  dependencies:
    #- build:${CI_JOB_NAME#*:}
    - .build

################
################
################

############
# Env Jobs #
############

env:
  extends: .env

###############
# Canary Jobs #
###############

canary:fedora_mpi:
  extends: .canary
  variables:
    DISTRO: "fedora"
    RUNTIME: "mpi"

canary:fedora_legion:
  extends: .canary
  variables:
    DISTRO: "fedora"
    RUNTIME: "legion"

canary:fedora_hpx:
  extends: .canary
  variables:
    DISTRO: "fedora"
    RUNTIME: "hpx"
  allow_failure: true 

#canary:centOS_mpi:
#  extends: .canary
#  tags:
#    - shell
#  image: 
#  variables:
#    DISTRO: "centOS"
#    RUNTIME: "mpi"

##############
# Build Jobs #
##############

build:ubuntu_mpi:
  extends: .build
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "mpi"

build:ubuntu_mpi_release:
  extends: build:ubuntu_mpi
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpi_clang:
  extends: build:ubuntu_mpi
  #before_script:
  #  - export CC=clang
  #  - export CXX=clang++
  variables:
    CC: clang
    CXX: clang++

build:ubuntu_mpi_clang_release:
  extends: build:ubuntu_mpi_clang
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpich_mpi:
  extends: .build
  variables:
    DISTRO: "ubuntu_mpich"
    RUNTIME: "mpi"

build:ubuntu_mpich_mpi_release:
  extends: build:ubuntu_mpich_mpi
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpich_mpi_clang:
  extends: build:ubuntu_mpich_mpi
  variables:
    CC: clang
    CXX: clang++

build:ubuntu_mpich_mpi_clang_release:
  extends: build:ubuntu_mpich_mpi_clang
  variables:
    BUILD_TYPE: "Release"

.build:fedora_mpi:
  extends: .build
  variables:
    DISTRO: "fedora"
    RUNTIME: "mpi"

build:fedora_mpi_release:
  extends: .build:fedora_mpi
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpi_clang:
  extends: .build:fedora_mpi
  variables:
    CC: clang
    CXX: clang++

build:fedora_mpi_clang_release:
  extends: build:fedora_mpi_clang
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpich_mpi:
  extends: .build
  variables:
    DISTRO: "fedora_mpich"
    RUNTIME: "mpi"

build:fedora_mpich_mpi_release:
  extends: build:fedora_mpich_mpi
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpich_mpi_clang:
  extends: build:fedora_mpich_mpi
  variables:
    CC: clang
    CXX: clang++

build:fedora_mpich_mpi_clang_release:
  extends: build:fedora_mpich_mpi_clang
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_legion:
  extends: .build
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "legion"

build:ubuntu_legion_release:
  extends: build:ubuntu_legion
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_legion_clang:
  extends: build:ubuntu_legion
  variables:
    CC: clang
    CXX: clang++

build:ubuntu_legion_clang_release:
  extends: build:ubuntu_legion_clang
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpich_legion:
  extends: .build
  variables:
    DISTRO: "ubuntu_mpich"
    RUNTIME: "legion"

build:ubuntu_mpich_legion_release:
  extends: build:ubuntu_mpich_legion
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpich_legion_clang:
  extends: build:ubuntu_mpich_legion
  variables:
    CC: clang
    CXX: clang++

build:ubuntu_mpich_legion_clang_release:
  extends: build:ubuntu_mpich_legion_clang
  variables:
    BUILD_TYPE: "Release"

.build:fedora_legion:
  extends: .build
  variables:
    DISTRO: "fedora"
    RUNTIME: "legion"

build:fedora_legion_release:
  extends: .build:fedora_legion
  variables:
    BUILD_TYPE: "Release"

build:fedora_legion_clang:
  extends: .build:fedora_legion
  variables:
    CC: clang
    CXX: clang++

build:fedora_legion_clang_release:
  extends: build:fedora_legion_clang
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpich_legion:
  extends: .build
  variables:
    DISTRO: "fedora_mpich"
    RUNTIME: "legion"

build:fedora_mpich_legion_release:
  extends: build:fedora_mpich_legion
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpich_legion_clang:
  extends: build:fedora_mpich_legion
  variables:
    CC: clang
    CXX: clang++

build:fedora_mpich_legion_clang_release:
  extends: build:fedora_mpich_legion_clang
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_hpx:
  extends: .build
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "hpx"
  allow_failure: true

build:ubuntu_hpx_clang:
  extends: build:ubuntu_hpx
  variables:
    CC: clang
    CXX: clang++

build:centOS_legion_intel:
  extends: .build
  tags:
    - shell
  image:
  variables:
    DISTRO: "centOS"
    RUNTIME: "legion"
    CC: icc
    CXX: icc

build:centOS_mpi_intel:
  extends: .build
  tags:
    - shell
  image:
  variables:
    DISTRO: "centOS"
    RUNTIME: "mpi"
    CC: icc
    CXX: icc

#############
# Test Jobs #
#############

test:ubuntu_mpi:
  extends: .test
  dependencies:
    - build:ubuntu_mpi
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "mpi"

test:ubuntu_mpi_release:
  extends: test:ubuntu_mpi
  dependencies:
    - build:ubuntu_mpi_release

test:ubuntu_mpi_clang:
  extends: test:ubuntu_mpi
  dependencies:
    - build:ubuntu_mpi_clang

test:ubuntu_mpi_clang_release:
  extends: test:ubuntu_mpi_clang
  dependencies:
    - build:ubuntu_mpi_clang_release

test:ubuntu_mpich_mpi:
  extends: .test
  dependencies:
    - build:ubuntu_mpich_mpi
  variables:
    DISTRO: "ubuntu_mpich"
    RUNTIME: "mpi"

test:ubuntu_mpich_mpi_release:
  extends: test:ubuntu_mpich_mpi
  dependencies:
    - build:ubuntu_mpich_mpi_release

test:ubuntu_mpich_mpi_clang:
  extends: test:ubuntu_mpich_mpi
  dependencies:
    - build:ubuntu_mpich_mpi_clang

test:ubuntu_mpich_mpi_clang_release:
  extends: test:ubuntu_mpich_mpi_clang
  dependencies:
    - build:ubuntu_mpich_mpi_clang_release

.test:fedora_mpi:
  extends: .test
  dependencies:
    - build:fedora_mpi
  variables:
    DISTRO: "fedora"
    RUNTIME: "mpi"

test:fedora_mpi_release:
  extends: .test:fedora_mpi
  dependencies:
    - build:fedora_mpi_release

test:fedora_mpi_clang:
  extends: .test:fedora_mpi
  dependencies:
    - build:fedora_mpi_clang

test:fedora_mpi_clang_release:
  extends: test:fedora_mpi_clang
  dependencies:
    - build:fedora_mpi_clang_release

test:fedora_mpich_mpi:
  extends: .test
  dependencies:
    - build:fedora_mpich_mpi
  variables:
    DISTRO: "fedora_mpich"
    RUNTIME: "mpi"

test:fedora_mpich_mpi_release:
  extends: test:fedora_mpich_mpi
  dependencies:
    - build:fedora_mpich_mpi_release

test:fedora_mpich_mpi_clang:
  extends: test:fedora_mpich_mpi
  dependencies:
    - build:fedora_mpich_mpi_clang

test:fedora_mpich_mpi_clang_release:
  extends: test:fedora_mpich_mpi_clang
  dependencies:
    - build:fedora_mpich_mpi_clang_release

test:ubuntu_legion:
  extends: .test
  dependencies:
    - build:ubuntu_legion
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "legion"

test:ubuntu_legion_release:
  extends: test:ubuntu_legion
  dependencies:
    - build:ubuntu_legion_release

test:ubuntu_legion_clang:
  extends: test:ubuntu_legion
  dependencies:
    - build:ubuntu_legion_clang

test:ubuntu_legion_clang_release:
  extends: test:ubuntu_legion_clang
  dependencies:
    - build:ubuntu_legion_clang_release

test:ubuntu_mpich_legion:
  extends: .test
  dependencies:
    - build:ubuntu_mpich_legion
  variables:
    DISTRO: "ubuntu_mpich"
    RUNTIME: "legion"

test:ubuntu_mpich_legion_release:
  extends: test:ubuntu_mpich_legion
  dependencies:
    - build:ubuntu_mpich_legion_release

test:ubuntu_mpich_legion_clang:
  extends: test:ubuntu_mpich_legion
  dependencies:
    - build:ubuntu_mpich_legion_clang

test:ubuntu_mpich_legion_clang_release:
  extends: test:ubuntu_mpich_legion_clang
  dependencies:
    - build:ubuntu_mpich_legion_clang_release

.test:fedora_legion:
  extends: .test
  dependencies:
    - build:fedora_legion
  variables:
    DISTRO: "fedora"
    RUNTIME: "legion"

test:fedora_legion_release:
  extends: .test:fedora_legion
  dependencies:
    - build:fedora_legion_release

test:fedora_legion_clang:
  extends: .test:fedora_legion
  dependencies:
    - build:fedora_legion_clang

test:fedora_legion_clang_release:
  extends: test:fedora_legion_clang
  dependencies:
    - build:fedora_legion_clang_release

test:fedora_mpich_legion:
  extends: .test
  dependencies:
    - build:fedora_mpich_legion
  variables:
    DISTRO: "fedora_mpich"
    RUNTIME: "legion"

test:fedora_mpich_legion_release:
  extends: test:fedora_mpich_legion
  dependencies:
    - build:fedora_mpich_legion_release

test:fedora_mpich_legion_clang:
  extends: test:fedora_mpich_legion
  dependencies:
    - build:fedora_mpich_legion_clang

test:fedora_mpich_legion_clang_release:
  extends: test:fedora_mpich_legion_clang
  dependencies:
    - build:fedora_mpich_legion_clang_release

test:ubuntu_hpx:
  extends: .test
  dependencies:
    - build:ubuntu_hpx
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "hpx"
  allow_failure: true

test:ubuntu_hpx_clang:
  extends: test:ubuntu_hpx
  dependencies:
    - build:ubuntu_hpx_clang

test:ubuntu_mpi.ignoreNoCI:
  extends: test:ubuntu_mpi
  dependencies:
    - build:ubuntu_mpi
  variables:
    IGNORE_NOCI: "TRUE"
  allow_failure: true

test:ubuntu_legion.ignoreNoCI:
  extends: test:ubuntu_legion
  dependencies:
    - build:ubuntu_legion
  variables:
    IGNORE_NOCI: "TRUE"
  allow_failure: true

test:ubuntu_hpx.ignoreNoCI:
  extends: test:ubuntu_hpx
  dependencies:
    - build:ubuntu_hpx
  variables:
    IGNORE_NOCI: "TRUE"
  allow_failure: true

test:centOS_legion_intel:
  extends: .test
  tags:
    - shell
  image:
  variables:
    DISTRO: "centOS"
    RUNTIME: "legion"
  dependencies:
    - build:centOS_legion_intel
  allow_failure: true

test:centOS_mpi_intel:
  extends: .test
  tags:
    - shell
  image:
  variables:
    DISTRO: "centOS"
    RUNTIME: "mpi"
  dependencies:
    - build:centOS_mpi_intel

##################
# Tutorials Jobs #
##################

tutorials:ubuntu_mpi:
  extends: .tutorials
  dependencies:
    - build:ubuntu_mpi
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "mpi"

tutorials:ubuntu_legion:
  extends: .tutorials
  dependencies:
    - build:ubuntu_legion
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "legion"

#############
# Apps Jobs #
#############

apps:ubuntu_mpi:
  extends: .apps
  dependencies:
    - build:ubuntu_mpi
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "mpi"

apps:ubuntu_legion:
  extends: .apps
  dependencies:
    - build:ubuntu_legion
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "legion"

###############
###############
###############

