
#services:
        #- docker:dind

stages:
        - build
        - test
        - deploy

DISTRO=ubuntu RUNTIME=legion DOCKERHUB=true:
        image: laristra/flecsi-third-party:ubuntu_mpich 
        stage: build

        variables:
          GLOBAL_CI_VARIABLE: "global_ci_value"
          GIT_SUBMODULE_STRATEGY: recursive


        before_script:
                - mkdir /builds/onurcaylak/flecsi/artifacts

        script:
                - DISTRO=ubuntu RUNTIME=legion DOCKERHUB=true
                - cd ../ && cp -vr flecsi/docker . && cp -vr flecsi docker/.
                - sed -i "1s/fedora/${DISTRO}/" docker/Dockerfile
                - if [[ ${CC} != gcc ]]; then TAG="_${CC}"; fi
                - if [[ ${CI_COMMIT_REF_NAME} != stable ]]; then TAG="${TAG}_${CI_COMMIT_REF_NAME//\//_}"; fi
                #- docker pull $(sed -n '1s/FROM //p' docker/Dockerfile)
                #- docker build -t laristra/flecsi-third-party:ubuntu /builds/onurcaylak/docker/ --build-arg LEGION=${LEGION} --build-arg RUNTIME=${RUNTIME} --build-arg CXXFLAGS="${WERROR:+-Werror} -Wno-deprecated-declarations" --build-arg COVERAGE=${COVERAGE} --build-arg MINIMAL=${MINIMAL} --build-arg CC=${CC} --build-arg CXX=${CXX} --build-arg CI=${CI} 
                #- CON=$(docker run -d laristra/flecsi-third-party:ubuntu /bin/bash) 
                #- docker cp ${CON}:/home/flecsi /builds/onurcaylak/flecsi/artifacts/.
                - touch /builds/onurcaylak/flecsi/artifacts/job1

        artifacts:
                expire_in: 1 hour
                paths:
                        - /builds/onurcaylak/flecsi/artifacts
                                                    


#DISTRO=ubuntu_mpich RUNTIME=legion DOCKERHUB=true:
        #stage: build

        #variables:
          #GLOBAL_CI_VARIABLE: "global_ci_value"
          #GIT_SUBMODULE_STRATEGY: recursive


        #before_script:
                #- mkdir /builds/onurcaylak/flecsi/artifacts

        #script:
                #- DISTRO=ubuntu_mpich RUNTIME=legion DOCKERHUB=true
                #- cd ../ && cp -vr flecsi/docker . && cp -vr flecsi docker/.
                #- sed -i "1s/fedora/${DISTRO}/" docker/Dockerfile
                #- if [[ ${CC} != gcc ]]; then TAG="_${CC}"; fi
                #- if [[ ${CI_COMMIT_REF_NAME} != stable ]]; then TAG="${TAG}_${CI_COMMIT_REF_NAME//\//_}"; fi
                #- docker pull $(sed -n '1s/FROM //p' docker/Dockerfile)
                #- docker build -t laristra/flecsi-third-party:ubuntu_mpich /builds/onurcaylak/docker/ --build-arg LEGION=${LEGION} --build-arg RUNTIME=${RUNTIME} --build-arg CXXFLAGS="${WERROR:+-Werror} -Wno-deprecated-declarations" --build-arg COVERAGE=${COVERAGE} --build-arg MINIMAL=${MINIMAL} --build-arg CC=${CC} --build-arg CXX=${CXX} --build-arg CI=${CI} 
                #- CON=$(docker run -d laristra/flecsi-third-party:ubuntu /bin/bash) 
                ##- docker cp ${CON}:/home/flecsi /builds/onurcaylak/flecsi/artifacts/.
                #- touch /builds/onurcaylak/flecsi/artifacts/job2

        #artifacts:
                #expire_in: 1 hour
                #paths:
                        #- /builds/onurcaylak/flecsi/artifacts
 
test_ubuntu:
        image: docker:latest
        stage: test
        script: 
                - cd /builds/onurcaylak/flecsi/artifacts/
                #- make test ARGS="-V"
                - ls -la 
        dependencies:
                - DISTRO=ubuntu RUNTIME=legion DOCKERHUB=true

        artifacts:
                expire_in: 1 hour
                paths:
                        - /builds/onurcaylak/flecsi/artifacts
                                                     
deploy_docker:
        image: docker:latest
        stage: deploy
        script:
                - docker images
        dependencies:
                - DISTRO=ubuntu RUNTIME=legion DOCKERHUB=true

       
