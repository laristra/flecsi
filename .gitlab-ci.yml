image: docker:latest

services:
        - docker:dind

stages:
        - build
        - test
        - deploy

before_script:
#        - git add remote origin https://github.com/onurcaylak/flecsi.git
        #- git submodule sync --recursive
        #- git submodule update --init --recursive
        #- git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        #- git fetch --unshallow && git fetch --tags #for versioning

DISTRO=ubuntu RUNTIME=legion DOCKERHUB=true:
        stage: build

        variables:
          GLOBAL_CI_VARIABLE: "global_ci_value"
          #GIT_SUBMODULE_STRATEGY: recursive

        before_script:
         - apk update && apk add git
         - git add remote origin https://github.com/onurcaylak/flecsi.git
         - git submodule sync --recursive
         - git submodule update --init --recursive
         - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
         - git fetch --unshallow && git fetch --tags #for versioning
         - export CC=gcc
         - mkdir /builds/onurcaylak/artifacts

        script:
                - DISTRO=ubuntu RUNTIME=legion DOCKERHUB=true
                - cd ../
                - cp -vr flecsi/docker .
                - mv -v flecsi docker/.
                - sed -i "1s/fedora/${DISTRO}/" docker/Dockerfile
                - if [[ ${CC} != gcc ]]; then TAG="_${CC}"; fi
                - if [[ ${CI_COMMIT_REF_NAME} != stable ]]; then TAG="${TAG}_${CI_COMMIT_REF_NAME//\//_}"; fi
                - docker pull $(sed -n '1s/FROM //p' docker/Dockerfile)
                - docker images
                - docker build -t laristra/flecsi-third-party:ubuntu /builds/onurcaylak/docker/ --build-arg LEGION=${LEGION} --build-arg RUNTIME=${RUNTIME} 
                - CON=$(docker run -d laristra/flecsi-third-party:ubuntu /bin/bash) 
                - docker cp ${CON}:/home/flecsi /builds/onurcaylak/artifacts/.

        artifacts:
                expire_in: 1 hour
                paths:
                        - /builds/onurcaylak/artifacts
                                                     
