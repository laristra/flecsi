image: docker:latest

services:
        - docker:dind

stages:
        - build
        - test
        - deploy

before_script:
        - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        - git fetch --unshallow && git fetch --tags #for versioning

DISTRO=ubuntu RUNTIME=legion DOCKERHUB=true:
        stage: build

        variables:
          GLOBAL_CI_VARIABLE: "global_ci_value"

        before_script:
        #CCache Config
                - HOME=/home
                - cd $HOME
                - mkdir -p ccache
                - export CCACHE_BASEDIR=${HOME}
                - export CCACHE_DIR=${HOME}/ccache 
    
        script:
                - DISTRO=ubuntu RUNTIME=legion DOCKERHUB=true
                - CC=gcc
                - cp -vr docker ${HOME}/docker
                - pwd && ls -la && ls -la /home && ls -la /home/docker
                - sed -i "1s/fedora/${DISTRO}/" ${HOME}/docker/Dockerfile
                - cd ../../
                - ls -la
                - mv  ${CI_PROJECT_PATH} $HOME/docker
                - ls -la
                - ls onurcaylak/
               #- ls -la onurcaylak/flecsi
               #- cp -r $HOME/.ccache ${HOME}/docker/ccache
               #- cp -r $HOME/.sonar ${HOME}/docker/sonar
                - if [[ ${CC} != gcc ]]; then TAG="_${CC}"; fi
                - if [[ ${CI_COMMIT_REF_NAME} != stable ]]; then TAG="${TAG}_${CI_COMMIT_REF_NAME//\//_}"; fi
                #- docker pull $(sed -n '1s/FROM //p' ${HOME}/docker/Dockerfile)
        
        artifacts:
                expire_in: 1 hour
                paths:
                        - build/
                                                      
